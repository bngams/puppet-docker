version: '3'

services:
  puppet:
    hostname: puppet.${DOMAIN:-internal}
    image: puppet/puppetserver
    ports:
      - 8140:8140
    environment:
      # necessary to set certname and server in puppet.conf, required by
      # puppetserver ca cli application
      - PUPPETSERVER_HOSTNAME=puppet.${DOMAIN:-internal}
      # DNS_ALT_NAMES must be set before starting the stack the first time,
      # and must list all the names under which the puppetserver can be
      # reached. 'puppet.${DOMAIN:-internal}' must be one of them, otherwise puppetdb won't be
      # able to get a cert. Add other names as a comma-separated list
      - DNS_ALT_NAMES=puppet,puppet.${DOMAIN:-internal},${DNS_ALT_NAMES:-}
      - PUPPERWARE_ANALYTICS_ENABLED=${PUPPERWARE_ANALYTICS_ENABLED:-true}
      - PUPPETDB_SERVER_URLS=https://puppetdb.${DOMAIN:-internal}:8081
    volumes:
      - puppetsrv-code:/etc/puppetlabs/code/
      - puppetsrv-puppet:/etc/puppetlabs/puppet/
      - puppetsrv-srvdata:/opt/puppetlabs/server/data/puppetserver/
    dns_search: ${DOMAIN:-internal}
    networks:
      default:
        aliases:
         - puppet.${DOMAIN:-internal}

  postgres:
    image: postgres:9.6
    environment:
      - POSTGRES_PASSWORD=puppetdb
      - POSTGRES_USER=puppetdb
      - POSTGRES_DB=puppetdb
    expose:
      - 5432
    volumes:
      - puppetdb-postgres_data:/var/lib/postgresql/data
      # - ./postgres-custom:/docker-entrypoint-initdb.d
    dns_search: ${DOMAIN:-internal}
    networks:
      default:
        aliases:
         - postgres.${DOMAIN:-internal}

  puppetdb:
    hostname: puppetdb.${DOMAIN:-internal}
    image: puppet/puppetdb
    environment:
      - PUPPERWARE_ANALYTICS_ENABLED=${PUPPERWARE_ANALYTICS_ENABLED:-true}
      # This name is an FQDN so the short name puppet doesn't collide outside compose network
      - PUPPETSERVER_HOSTNAME=puppet.${DOMAIN:-internal}
      - PUPPETDB_POSTGRES_HOSTNAME=postgres.${DOMAIN:-internal}
      - PUPPETDB_PASSWORD=puppetdb
      - PUPPETDB_USER=puppetdb
    ports:
      - 8080
      - 8081
    depends_on:
      - postgres
      - puppet
    volumes:
      - puppetdb-ssl:/etc/puppetlabs/puppet/ssl/
    dns_search: ${DOMAIN:-internal}
    networks:
      default:
        aliases:
         - puppetdb.${DOMAIN:-internal}

  puppetboard:
    hostname: puppetboard.${DOMAIN:-internal}
    # DEPRECATED
    # image: puppet/puppetboard
    image: ghcr.io/voxpupuli/puppetboard
    ports:
      - 80
    environment:
      - PUPPETDB_HOST=puppetdb
      - PUPPETDB_PORT=8080
    extra_hosts:
      - "puppet:172.23.0.2"
      - "puppet.internal:172.23.0.2"
      - "puppetdb:172.23.0.4"
      - "puppetdb.internal:172.23.0.4"
    depends_on:
      - puppet
      - puppetdb
    dns_search: ${DOMAIN:-internal}
    networks:
      default:
        aliases:
         - puppetboard.${DOMAIN:-internal}
  
  agent1:
    hostname: agent1.${DOMAIN:-internal}
    image: debian
    # command: "/bin/bash"
    command: ["sleep", "infinity"]
    # image: puppet/puppet-agent-ubuntu
    # restart: unless-stopped
    # ports
    # LAN network docker => pas besoin de port forward
    # volumes:
    #   - etc :/et
    extra_hosts:
      - "puppet:172.23.0.2"
      - "puppet.internal:172.23.0.2"
    depends_on:
      - puppet
    dns_search: ${DOMAIN:-internal}
    networks:
      default:
        aliases:
         - agent1.${DOMAIN:-internal}

  agent2:
    hostname: agent2.${DOMAIN:-internal}
    image: puppet/puppet-agent-ubuntu
    command: ["sleep", "infinity"]
    restart: unless-stopped
    # ports
    # LAN network docker => pas besoin de port forward
    # volumes:
    #   - etc :/et
    extra_hosts:
      - "puppet:172.23.0.2"
      - "puppet.internal:172.23.0.2"
    depends_on:
      - puppet
    dns_search: ${DOMAIN:-internal}
    networks:
      default:
        aliases:
         - agent2.${DOMAIN:-internal}

volumes:
  puppetsrv-code:
  puppetsrv-puppet:
  puppetsrv-srvdata:
  puppetdb-postgres_data:
  puppetdb-ssl:
